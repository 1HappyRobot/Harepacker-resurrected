<UserControl x:Class="HaRepacker.GUI.Panels.SubPanels.ImageRenderViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:HaRepacker.GUI.Panels.SubPanels"
             xmlns:converter="clr-namespace:HaRepacker.Converter"
             mc:Ignorable="d" 
             
             d:DesignHeight="250" d:DesignWidth="400">

    <UserControl.Resources>
        <converter:ImageSizeDoubleToIntegerConverter x:Key="imageSizeConverter" />
        <converter:VectorOriginPointFToMarginConverter x:Key="vectorOriginConverter" />
        <converter:CheckboxToVisibilityConverter x:Key="checkboxToVisibilityConverter"/>
        <converter:ImageWidthOrHeightToScreenDPIConverter x:Key="imageWidthOrHeightToScreenDPIConverter"/>
        <converter:PointFOriginToStringConverter x:Key="pointFOriginToStringConverter"/>
        <converter:PointFToVisiblityConverter x:Key="pointFToVisiblityConverter"/>
    </UserControl.Resources>
  

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="Default">
                </VisualState>

                <VisualState x:Name="BlackTheme">
                    <Storyboard>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock1">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock2">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock3">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock4">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock5">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="checkbox_crosshair">
                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                        </ColorAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <!-- Image and borders-->
            <Grid Width="{Binding ImageWidth, Converter={StaticResource imageWidthOrHeightToScreenDPIConverter}}" 
                  Height="{Binding ImageHeight, Converter={StaticResource imageWidthOrHeightToScreenDPIConverter}}" 
                VerticalAlignment="Top" HorizontalAlignment="Left" Margin="80,50,0,0">

                <Border  BorderBrush="Red" BorderThickness="0.5" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Border.RenderTransform>
                        <ScaleTransform 
                                ScaleX="{Binding ElementName=ZoomSlider, Path='Value'}" 
                                ScaleY="{Binding ElementName=ZoomSlider, Path='Value'}"/>
                    </Border.RenderTransform>

                    <Grid>
                        <!-- Source="pack://siteoforigin:,,,/Resources/ladyboss_test_attack2_0.png" -->
                        <!-- Source="{Binding Image}"  -->
                        <Image x:Name="canvasPropBox" 
                               Source="{Binding Image}"
                               Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center"
                               />

                        <!-- Crosshair for vector origin-->
                        <!-- Margin="{Binding CanvasVectorOrigin, Converter={StaticResource vectorOriginConverter}}"
                        -->
                        <Grid
                              Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                              HorizontalAlignment="Left" VerticalAlignment="Top"
                              Margin="{Binding CanvasVectorOrigin, Converter={StaticResource vectorOriginConverter}}"  >

                            <!-- Grid to compensate for the crosshair length-->
                            <!-- Crosshair must always only be 1/2 of the image width and height-->
                            <Grid  Margin="-5,0,0,-5"
                                   Visibility="{Binding CanvasVectorOrigin, Converter={StaticResource pointFToVisiblityConverter}}">
                                <Grid Width="0.5" Height="10" Background="DarkCyan"/>
                                <Grid Height="0.5" Width="10" Background="DarkCyan"/>
                            </Grid>
                        </Grid>

                        <!-- Grid for head crosshair-->
                        <Grid 
                              Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                              HorizontalAlignment="Left" VerticalAlignment="Top"
                              Margin="{Binding CanvasVectorHead, Converter={StaticResource vectorOriginConverter}}"  >

                            <!-- Grid to compensate for the crosshair length-->
                            <!-- Crosshair must always only be 1/2 of the image width and height-->
                            <Grid  Margin="-5,0,0,-5"
                                   Visibility="{Binding CanvasVectorHead, Converter={StaticResource pointFToVisiblityConverter}}">
                                <Grid Width="0.5" Height="10" Background="DarkOrange"/>
                                <Grid Height="0.5" Width="10" Background="DarkOrange"/>
                            </Grid>
                        </Grid>

                        <!-- Grid for head lt-->
                        <Grid 
                              Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                              HorizontalAlignment="Left" VerticalAlignment="Top"
                              Margin="{Binding CanvasVectorLt, Converter={StaticResource vectorOriginConverter}}"  >

                            <!-- Grid to compensate for the crosshair length-->
                            <!-- Crosshair must always only be 1/2 of the image width and height-->
                            <Grid  Margin="-5,0,0,-5"
                                   Visibility="{Binding CanvasVectorLt, Converter={StaticResource pointFToVisiblityConverter}}">
                                <Grid Width="0.5" Height="10" Background="DarkMagenta"/>
                                <Grid Height="0.5" Width="10" Background="DarkMagenta"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>

            <!-- Image width-->
            <StackPanel Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                Margin="0,80,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="textBlock" Text="Width: " FontSize="10" FontWeight="Bold"/>
                    <TextBlock x:Name="textBlock1" Text="{Binding ImageWidth, Converter={StaticResource imageSizeConverter}}" FontSize="10"/>
                    <TextBlock x:Name="textBlock2" Text="px " Margin="3,0,0,0" FontSize="10"/>
                </StackPanel>
            </StackPanel>

            <!-- Image height -->
            <StackPanel Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                Margin="80,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="textBlock3" Text="Height: " FontSize="10" FontWeight="Bold"/>
                    <TextBlock x:Name="textBlock4" Text="{Binding ImageHeight, Converter={StaticResource imageSizeConverter}}" FontSize="10"/>
                    <TextBlock x:Name="textBlock5" Text="px " Margin="3,0,0,0" FontSize="10"/>
                </StackPanel>
            </StackPanel>

            <!-- Checkbox to enable crosshair or not-->
            <Grid VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,60,10,0">
                <CheckBox x:Name="checkbox_crosshair" Content="Enable Crosshair"
                          Checked="checkbox_crosshair_Checked" Unchecked="checkbox_crosshair_Checked"/>
            </Grid>

            <!-- Displays the origin-->
            <StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Left"
                        Visibility="{Binding ElementName=checkbox_crosshair, Path=IsChecked, Converter={StaticResource checkboxToVisibilityConverter}}"
                        Orientation="Vertical" Margin="70,70,0,0">
                <!-- 'origin' -->
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding CanvasVectorOrigin, Converter={StaticResource pointFToVisiblityConverter}}">
                    <TextBlock Text="Origin " Margin="0,0,0,0" FontSize="10" Foreground="DarkCyan" FontWeight="Bold"/>
                    <TextBlock Text="{Binding CanvasVectorOrigin, Converter={StaticResource pointFOriginToStringConverter}}" Margin="3,0,0,0" FontSize="10"  Foreground="DarkCyan"/>
                </StackPanel>

                <!-- 'head' -->
                <StackPanel Orientation="Horizontal" 
                            Visibility="{Binding CanvasVectorHead, Converter={StaticResource pointFToVisiblityConverter}}">
                    <TextBlock Text="Head " Margin="0,0,0,0" FontSize="10" Foreground="DarkOrange" FontWeight="Bold"/>
                    <TextBlock Text="{Binding CanvasVectorHead, Converter={StaticResource pointFOriginToStringConverter}}" Margin="3,0,0,0" FontSize="10"  Foreground="DarkOrange"/>
                </StackPanel>
                
                <!-- 'lt' -->
                <StackPanel Orientation="Horizontal" 
                            Visibility="{Binding CanvasVectorLt, Converter={StaticResource pointFToVisiblityConverter}}">
                    <TextBlock Text="lt " Margin="0,0,0,0" FontSize="10" Foreground="DarkMagenta" FontWeight="Bold"/>
                    <TextBlock Text="{Binding CanvasVectorLt, Converter={StaticResource pointFOriginToStringConverter}}" Margin="3,0,0,0" FontSize="10"  Foreground="DarkMagenta"/>
                </StackPanel>
            </StackPanel>
        </Grid>

        <Grid x:Name="grid_zoom" Grid.Row="1" VerticalAlignment="Bottom">
            <Slider Name="ZoomSlider"
                        Margin="10,0,10,0"
                        Minimum="0.1"
                        Maximum="20"
                        Value="3"
                        TickFrequency="0.05"
                        SmallChange="0.05"
                        LargeChange="0.1" 
                    ValueChanged="ZoomSlider_ValueChanged"
                    />
        </Grid>
    </Grid>
</UserControl>
